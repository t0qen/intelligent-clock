from machine import Pin, I2C
from picobricks import SSD1306_I2C
import time
import framebuf
import network
import ntptime


i2c = I2C(0, scl=Pin(5), sda=Pin(4))
oled = SSD1306_I2C(128, 64, i2c, addr=0x3C)
oled.fill(0)

# network section
SSID = "Livebox-8A6E"
PASSWORD = "FA994451AECAC21FFF4FA1F17D"

wlan = network.WLAN(network.STA_IF)
wlan.active(True)
wlan.connect(SSID, PASSWORD)

while not wlan.isconnected():
    time.sleep(0.5)
print("Connected to network")

# ntp
try:
    ntptime.settime()
except Exception as e:
    print("ntp error : ", e)



# clock numbers 
byte_0 = bytearray(
    b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xff\xe0\x0f\xff\xf0\x1f\xff\xf8?\xff\xf8?\xff\xfc?\xff\xfc?\xff\xfc?\xff\xfc?\xe7\xfc?\xc3\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\xc3\xfc?\xff\xfc?\xff\xfc?\xff\xfc?\xff\xfc?\xff\xfc?\xff\xfc\x1f\xff\xf8\x03\xff\xf0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
)
byte_1 = bytearray(
    b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\xf0\x00?\xf0\x00\xff\xf0\x07\xff\xf0\x0f\xff\xf0?\xff\xf0?\xff\xf0?\xff\xf0?\xff\xf0?\xe7\xf0?\xc7\xf0>\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
)
byte_2 = bytearray(
    b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xff\xe0\x07\xff\xf0\x0f\xff\xf0\x1f\xff\xf8?\xff\xf8?\xff\xf8?\xff\xf8?\xff\xf8?\xf7\xf8?\xe7\xf8?\xc7\xf8?\x87\xf8?\x8f\xf8\x00\x0f\xf8\x00\x0f\xf8\x00\x1f\xf0\x00\x1f\xf0\x00\x1f\xf0\x00\x1f\xf0\x00?\xe0\x00?\xe0\x00?\xe0\x00\x7f\xc0\x00\x7f\xc0\x00\x7f\xc0\x00\xff\x80\x00\xff\x80\x00\xff\x80\x01\xff\x00\x01\xff\x00\x03\xff\x00\x03\xfe\x00\x07\xfe\x00\x07\xfe\x00\x0f\xfc\x00\x0f\xfc\x00\x0f\xfc\x00\x0f\xf8\x00\x1f\xf8\x00?\xf0\x00?\xf0\x00?\xe0\x00?\xe0\x00?\xe0\x00?\xc0\x00?\xff\xf8?\xff\xf8?\xff\xf8?\xff\xf8?\xff\xf8?\xff\xf8?\xff\xf8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
)
byte_3 = bytearray(
    b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\xff\x80\x1f\xff\xf0?\xff\xf8?\xff\xfc?\xff\xfc?\xff\xfc?\xff\xfc?\xff\xfc?\xc3\xfc?\x83\xfc?\x83\xfc?\x83\xfc\x00\x03\xfc\x00\x03\xfc\x00\x07\xfc\x00\x07\xfc\x00\x07\xfc\x00\x07\xfc\x00\x07\xfc\x00\x07\xf8\x00\x07\xf8\x00\x07\xf0\x00\x0f\xf0\x00?\xf0\x00\x7f\xe0\x01\xff\xe0\x01\xff\xc0\x01\xff\xc0\x01\xff\xc0\x01\xff\xe0\x01\xff\xf0\x00\x7f\xf8\x00\x0f\xf8\x00\x07\xf8\x00\x03\xfc\x00\x03\xfc\x00\x01\xfc\x00\x01\xfc\x00\x01\xfc\x00\x01\xfc\x00\x01\xfc\x00\x01\xfc\x00\x03\xfc\x00\x07\xfc\x00\x07\xfc?\x8f\xfc?\xcf\xfc?\xff\xfc?\xff\xfc?\xff\xf8?\xff\xf0?\xff\xf0?\xff\xe0\x0f\xff\xe0\x00\x7f\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
)
byte_4 = bytearray(
    b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1f\xe0\x00\x1f\xe0\x00?\xe0\x00?\xe0\x00\x7f\xe0\x00\x7f\xe0\x00\x7f\xe0\x00\xff\xe0\x00\xff\xc0\x01\xff\x80\x03\xff\x80\x03\xff\x00\x07\xff\x00\x07\xfe\x00\x07\xfe\x00\x07\xfc\x00\x0f\xfc\x00\x0f\xf8\x00\x0f\xf8\x00\x0f\xf0\x00\x1f\xf0\x00\x1f\xf0\x00\x1f\xe0\x00\x1f\xe0\x00?\xe0\x00?\xe0\x00?\xc0\x00?\xc0\x00?\xc0\x00?\xc0\x00?\xc7\xf0?\xc7\xf0?\xc7\xf0?\xe7\xf0?\xff\xfc?\xff\xfc?\xff\xfc?\xff\xfc\x1f\xff\xfc\x1f\xff\xfc\x0f\xff\xfc\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
)
byte_5 = bytearray(
    b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\xff\xf8\x1f\xff\xf8\x1f\xff\xf8\x1f\xff\xf8\x1f\xff\xf8\x1f\xff\xf8\x1f\xff\xf8\x1f\xe0\x00\x1f\xc0\x00\x1f\xc0\x00\x1f\xc0\x00\x1f\xc0\x00\x1f\xc0\x00\x1f\xc0\x00\x1f\xc0\x00\x1f\xc0\x00\x1f\xf0\x00\x1f\xff\xc0\x1f\xff\xe0\x1f\xff\xf0\x1f\xff\xf0\x1f\xff\xf8\x1f\xff\xf8\x07\xff\xf8\x00\x1f\xfc\x00\x0f\xfc\x00\x07\xfc\x00\x03\xfc\x00\x03\xfc\x00\x03\xfc\x00\x03\xfc\x00\x03\xfc\x00\x03\xfc\x00\x03\xfc\x00\x03\xfc\x00\x03\xfc\x00\x03\xfc\x00\x03\xf8\x00\x03\xf8\x00\x03\xf8\x00\x07\xf8\x00\x07\xf8\x00\x07\xf8\x1f\xc7\xf8\x1f\xc7\xf8\x1f\xcf\xf8\x1f\xff\xf0\x1f\xff\xf0\x1f\xff\xf0\x1f\xff\xf0\x1f\xff\xf0\x1f\xff\xe0\x0f\xff\xe0\x01\xff\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
)
byte_6 = bytearray(
    b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\xff\xe0\x07\xff\xf8\x0f\xff\xfc\x0f\xff\xfc\x0f\xff\xfc\x1f\xff\xfc\x1f\xff\xfc\x1f\xff\xfc\x1f\xf1\xfc?\xe1\xfc?\xe1\xfc?\xe0\x00?\xc0\x00?\xc0\x00?\xc0\x00?\x80\x00?\x80\x00?\x80\x00?\x80\x00?\x80\x00?\x80\x00?\x80\x00?\x80\x00?\x80\x00?\x80\x00?\xff\xc0?\xff\xe0?\xff\xf0?\xff\xf8?\xff\xf8?\xff\xfc?\xff\xfc?\xff\xfc?\xef\xfc?\xc7\xfc?\xc3\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\xc1\xfc?\xc1\xfc?\xe1\xfc?\xff\xfc?\xff\xfc?\xff\xfc?\xff\xfc\x1f\xff\xfc\x1f\xff\xfc\x0f\xff\xf8\x01\xff\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
)
byte_7 = bytearray(
    b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00?\xff\xfc?\xff\xfc?\xff\xfc?\xff\xfc?\xff\xfc?\xff\xfc?\xff\xfc\x00\x03\xfc\x00\x03\xfc\x00\x07\xfc\x00\x07\xfc\x00\x0f\xf8\x00\x0f\xf8\x00\x0f\xf8\x00\x0f\xf8\x00\x1f\xf0\x00\x1f\xf0\x00?\xe0\x00?\xe0\x00?\xe0\x00\x7f\xe0\x00\x7f\xc0\x00\x7f\xc0\x00\x7f\x80\x00\x7f\x80\x00\xff\x80\x00\xff\x00\x00\xff\x00\x00\xff\x00\x01\xff\x00\x01\xff\x00\x01\xfe\x00\x01\xfe\x00\x01\xfe\x00\x03\xfe\x00\x03\xfc\x00\x03\xfc\x00\x03\xfc\x00\x03\xfc\x00\x07\xfc\x00\x07\xf8\x00\x07\xf8\x00\x07\xf8\x00\x07\xf8\x00\x07\xf8\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x07\xf0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
)
byte_8 = bytearray(
    b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xff\xc0\x1f\xff\xe0?\xff\xf0?\xff\xf8?\xff\xfc?\xff\xfc?\xff\xfc\x7f\xff\xfc\x7f\xcf\xfc\x7f\x87\xfe\x7f\x83\xfe\x7f\x01\xfe\x7f\x81\xfe?\x81\xfe?\x81\xfe?\x81\xfe?\x81\xfe?\xc3\xfe\x1f\xc3\xfe\x0f\xe7\xfe\x07\xf7\xfe\x07\xff\xfc\x03\xff\xfc\x01\xff\xf8\x01\xff\xf0\x01\xff\xf0\x01\xff\xf0\x03\xff\xf0\x03\xff\xf0\x07\xff\xf0\x0f\xff\xf8\x0f\xf7\xf8\x1f\xe3\xf8\x1f\xc1\xf8?\xc1\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x80\xfc?\x80\xfc?\x80\xfc?\x80\xfe?\x80\xfe?\x80\xfe?\xc0\xfe?\xc1\xfe?\xc1\xfc?\xe1\xfc?\xf1\xfc?\xff\xfc\x1f\xff\xfc\x1f\xff\xfc\x1f\xff\xf8\x1f\xff\xf8\x0f\xff\xf0\x03\xff\xf0\x01\xff\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
)
byte_9 = bytearray(
    b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\xff\x80\x1f\xff\xf0?\xff\xf8?\xff\xf8?\xff\xfc?\xff\xfc?\xff\xfc?\xff\xfc?\x87\xfc?\x83\xfc?\x83\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\x81\xfc?\xc3\xfc?\xe3\xfc?\xf7\xfc?\xff\xfc?\xff\xfc?\xff\xfc\x1f\xff\xfc\x1f\xff\xfc\x0f\xff\xfc\x07\xff\xfc\x03\xff\xfc\x00\x01\xfc\x00\x01\xfc\x00\x01\xfc\x00\x01\xfc\x00\x01\xfc\x00\x01\xfc\x00\x01\xfc\x00\x01\xfc\x00\x01\xfc\x00\x01\xfc\x00\x03\xfc\x00\x03\xfc\x00\x03\xfc\x00\x07\xfc?\x87\xfc?\x87\xfc?\x8f\xf8?\xff\xf8?\xff\xf8?\xff\xf8?\xff\xf0?\xff\xf0?\xff\xf0\x1f\xff\xe0\x07\xff\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
)
byte_dots = bytearray(
    b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\xf0\x07\xf0\x07\xf0\x07\xf0\x07\xf0\x07\xf0\x07\xf0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\xe0\x0f\xe0\x0f\xe0\x0f\xe0\x0f\xe0\x0f\xe0\x0f\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
)

fb = [None] * 11

def convert_to_fb():
    print("CONVERSION .... to fb")
    # I know this part isn't sexy 
    fb[0] = framebuf.FrameBuffer(byte_0, 24, 64, framebuf.MONO_HLSB) 
    fb[1] = framebuf.FrameBuffer(byte_1, 24, 64, framebuf.MONO_HLSB)
    fb[2] = framebuf.FrameBuffer(byte_2, 24, 64, framebuf.MONO_HLSB) 
    fb[3] = framebuf.FrameBuffer(byte_3, 24, 64, framebuf.MONO_HLSB) 
    fb[4] = framebuf.FrameBuffer(byte_4, 24, 64, framebuf.MONO_HLSB)
    fb[5] = framebuf.FrameBuffer(byte_5, 24, 64, framebuf.MONO_HLSB)
    fb[6] = framebuf.FrameBuffer(byte_6, 24, 64, framebuf.MONO_HLSB)
    fb[7] = framebuf.FrameBuffer(byte_7, 24, 64, framebuf.MONO_HLSB)
    fb[8] = framebuf.FrameBuffer(byte_8, 24, 64, framebuf.MONO_HLSB)
    fb[9] = framebuf.FrameBuffer(byte_9, 24, 64, framebuf.MONO_HLSB)
    fb[10] = framebuf.FrameBuffer(byte_dots, 16, 64, framebuf.MONO_HLSB)

def get_ntp_time():
    # utc + 1 
    return time.localtime(time.time() + 3600)

def draw_clock():
    current_time = get_ntp_time()

    # dots
    oled.blit(fb[10], 56, 0) 

    # hours
    hours = current_time[3]
    if hours < 10:
        hours_str = "0" + str(hours)
    else:
        hours_str = str(hours)

    oled.blit(fb[int(hours_str[0])], 8, 0)
    oled.blit(fb[int(hours_str[1])], 32, 0)

    # minutes
    minutes = current_time[4]
    if minutes < 10:
        minutes_str = "0" + str(minutes)
    else:
        minutes_str = str(minutes)

    oled.blit(fb[int(minutes_str[0])], 72, 0)
    oled.blit(fb[int(minutes_str[0])], 96, 0)

convert_to_fb()

while True:

    draw_clock()
    oled.show()